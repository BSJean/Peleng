//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("PelengModel", "FK__СборкаВсп__ВспМа__2D27B809", "ВспомогательныеМатериалы", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Peleng.ВспомогательныеМатериалы), "СборкаВспМатериал", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Peleng.СборкаВспМатериал), true)]
[assembly: EdmRelationshipAttribute("PelengModel", "FK__ВходящиеС__Номер__276EDEB3", "Сборки", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Peleng.Сборки), "ВходящиеСборки", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Peleng.ВходящиеСборки), true)]
[assembly: EdmRelationshipAttribute("PelengModel", "FK__Детали__286302EC", "Маршруты", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Peleng.Маршруты), "Детали", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Peleng.Детали), true)]
[assembly: EdmRelationshipAttribute("PelengModel", "FK__Детали__Материал__29572725", "Материалы", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Peleng.Материалы), "Детали", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Peleng.Детали), true)]
[assembly: EdmRelationshipAttribute("PelengModel", "FK__СборкиДет__Номер__300424B4", "Детали", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Peleng.Детали), "СборкиДетали", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Peleng.СборкиДетали), true)]
[assembly: EdmRelationshipAttribute("PelengModel", "FK__Материалы__Марка__2C3393D0", "МаркиМатериала", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Peleng.МаркиМатериала), "Материалы", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Peleng.Материалы), true)]
[assembly: EdmRelationshipAttribute("PelengModel", "FK__Маршруты__НомерП__2A4B4B5E", "Подразделения", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Peleng.Подразделения), "Маршруты", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Peleng.Маршруты), true)]
[assembly: EdmRelationshipAttribute("PelengModel", "FK__Сборки__2F10007B", "Маршруты", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Peleng.Маршруты), "Сборки", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Peleng.Сборки), true)]
[assembly: EdmRelationshipAttribute("PelengModel", "FK__Материалы__Профи__2B3F6F97", "Профили", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Peleng.Профили), "Материалы", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Peleng.Материалы), true)]
[assembly: EdmRelationshipAttribute("PelengModel", "FK__СборкаВсп__Номер__2E1BDC42", "Сборки", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Peleng.Сборки), "СборкаВспМатериал", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Peleng.СборкаВспМатериал), true)]
[assembly: EdmRelationshipAttribute("PelengModel", "FK__СборкиДет__Номер__30F848ED", "Сборки", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Peleng.Сборки), "СборкиДетали", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Peleng.СборкиДетали), true)]

#endregion

namespace Peleng
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class PelengEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new PelengEntities object using the connection string found in the 'PelengEntities' section of the application configuration file.
        /// </summary>
        public PelengEntities() : base("name=PelengEntities", "PelengEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new PelengEntities object.
        /// </summary>
        public PelengEntities(string connectionString) : base(connectionString, "PelengEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new PelengEntities object.
        /// </summary>
        public PelengEntities(EntityConnection connection) : base(connection, "PelengEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ВспомогательныеМатериалы> ВспомогательныеМатериалы
        {
            get
            {
                if ((_ВспомогательныеМатериалы == null))
                {
                    _ВспомогательныеМатериалы = base.CreateObjectSet<ВспомогательныеМатериалы>("ВспомогательныеМатериалы");
                }
                return _ВспомогательныеМатериалы;
            }
        }
        private ObjectSet<ВспомогательныеМатериалы> _ВспомогательныеМатериалы;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ВходящиеСборки> ВходящиеСборки
        {
            get
            {
                if ((_ВходящиеСборки == null))
                {
                    _ВходящиеСборки = base.CreateObjectSet<ВходящиеСборки>("ВходящиеСборки");
                }
                return _ВходящиеСборки;
            }
        }
        private ObjectSet<ВходящиеСборки> _ВходящиеСборки;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Детали> Детали
        {
            get
            {
                if ((_Детали == null))
                {
                    _Детали = base.CreateObjectSet<Детали>("Детали");
                }
                return _Детали;
            }
        }
        private ObjectSet<Детали> _Детали;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<МаркиМатериала> МаркиМатериала
        {
            get
            {
                if ((_МаркиМатериала == null))
                {
                    _МаркиМатериала = base.CreateObjectSet<МаркиМатериала>("МаркиМатериала");
                }
                return _МаркиМатериала;
            }
        }
        private ObjectSet<МаркиМатериала> _МаркиМатериала;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Маршруты> Маршруты
        {
            get
            {
                if ((_Маршруты == null))
                {
                    _Маршруты = base.CreateObjectSet<Маршруты>("Маршруты");
                }
                return _Маршруты;
            }
        }
        private ObjectSet<Маршруты> _Маршруты;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Материалы> Материалы
        {
            get
            {
                if ((_Материалы == null))
                {
                    _Материалы = base.CreateObjectSet<Материалы>("Материалы");
                }
                return _Материалы;
            }
        }
        private ObjectSet<Материалы> _Материалы;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Подразделения> Подразделения
        {
            get
            {
                if ((_Подразделения == null))
                {
                    _Подразделения = base.CreateObjectSet<Подразделения>("Подразделения");
                }
                return _Подразделения;
            }
        }
        private ObjectSet<Подразделения> _Подразделения;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Профили> Профили
        {
            get
            {
                if ((_Профили == null))
                {
                    _Профили = base.CreateObjectSet<Профили>("Профили");
                }
                return _Профили;
            }
        }
        private ObjectSet<Профили> _Профили;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<СборкаВспМатериал> СборкаВспМатериал
        {
            get
            {
                if ((_СборкаВспМатериал == null))
                {
                    _СборкаВспМатериал = base.CreateObjectSet<СборкаВспМатериал>("СборкаВспМатериал");
                }
                return _СборкаВспМатериал;
            }
        }
        private ObjectSet<СборкаВспМатериал> _СборкаВспМатериал;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Сборки> Сборки
        {
            get
            {
                if ((_Сборки == null))
                {
                    _Сборки = base.CreateObjectSet<Сборки>("Сборки");
                }
                return _Сборки;
            }
        }
        private ObjectSet<Сборки> _Сборки;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<СборкиДетали> СборкиДетали
        {
            get
            {
                if ((_СборкиДетали == null))
                {
                    _СборкиДетали = base.CreateObjectSet<СборкиДетали>("СборкиДетали");
                }
                return _СборкиДетали;
            }
        }
        private ObjectSet<СборкиДетали> _СборкиДетали;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ВспомогательныеМатериалы EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToВспомогательныеМатериалы(ВспомогательныеМатериалы вспомогательныеМатериалы)
        {
            base.AddObject("ВспомогательныеМатериалы", вспомогательныеМатериалы);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ВходящиеСборки EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToВходящиеСборки(ВходящиеСборки входящиеСборки)
        {
            base.AddObject("ВходящиеСборки", входящиеСборки);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Детали EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToДетали(Детали детали)
        {
            base.AddObject("Детали", детали);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the МаркиМатериала EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToМаркиМатериала(МаркиМатериала маркиМатериала)
        {
            base.AddObject("МаркиМатериала", маркиМатериала);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Маршруты EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToМаршруты(Маршруты маршруты)
        {
            base.AddObject("Маршруты", маршруты);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Материалы EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToМатериалы(Материалы материалы)
        {
            base.AddObject("Материалы", материалы);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Подразделения EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToПодразделения(Подразделения подразделения)
        {
            base.AddObject("Подразделения", подразделения);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Профили EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToПрофили(Профили профили)
        {
            base.AddObject("Профили", профили);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the СборкаВспМатериал EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToСборкаВспМатериал(СборкаВспМатериал сборкаВспМатериал)
        {
            base.AddObject("СборкаВспМатериал", сборкаВспМатериал);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Сборки EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToСборки(Сборки сборки)
        {
            base.AddObject("Сборки", сборки);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the СборкиДетали EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToСборкиДетали(СборкиДетали сборкиДетали)
        {
            base.AddObject("СборкиДетали", сборкиДетали);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PelengModel", Name="ВспомогательныеМатериалы")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ВспомогательныеМатериалы : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ВспомогательныеМатериалы object.
        /// </summary>
        /// <param name="наименование">Initial value of the Наименование property.</param>
        /// <param name="вспМатериалID">Initial value of the ВспМатериалID property.</param>
        /// <param name="плотность">Initial value of the Плотность property.</param>
        public static ВспомогательныеМатериалы CreateВспомогательныеМатериалы(global::System.String наименование, global::System.Int32 вспМатериалID, global::System.Double плотность)
        {
            ВспомогательныеМатериалы вспомогательныеМатериалы = new ВспомогательныеМатериалы();
            вспомогательныеМатериалы.Наименование = наименование;
            вспомогательныеМатериалы.ВспМатериалID = вспМатериалID;
            вспомогательныеМатериалы.Плотность = плотность;
            return вспомогательныеМатериалы;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Наименование
        {
            get
            {
                return _Наименование;
            }
            set
            {
                OnНаименованиеChanging(value);
                ReportPropertyChanging("Наименование");
                _Наименование = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Наименование");
                OnНаименованиеChanged();
            }
        }
        private global::System.String _Наименование;
        partial void OnНаименованиеChanging(global::System.String value);
        partial void OnНаименованиеChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ВспМатериалID
        {
            get
            {
                return _ВспМатериалID;
            }
            set
            {
                if (_ВспМатериалID != value)
                {
                    OnВспМатериалIDChanging(value);
                    ReportPropertyChanging("ВспМатериалID");
                    _ВспМатериалID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ВспМатериалID");
                    OnВспМатериалIDChanged();
                }
            }
        }
        private global::System.Int32 _ВспМатериалID;
        partial void OnВспМатериалIDChanging(global::System.Int32 value);
        partial void OnВспМатериалIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Плотность
        {
            get
            {
                return _Плотность;
            }
            set
            {
                OnПлотностьChanging(value);
                ReportPropertyChanging("Плотность");
                _Плотность = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Плотность");
                OnПлотностьChanged();
            }
        }
        private global::System.Double _Плотность;
        partial void OnПлотностьChanging(global::System.Double value);
        partial void OnПлотностьChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PelengModel", "FK__СборкаВсп__ВспМа__2D27B809", "СборкаВспМатериал")]
        public EntityCollection<СборкаВспМатериал> СборкаВспМатериал
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<СборкаВспМатериал>("PelengModel.FK__СборкаВсп__ВспМа__2D27B809", "СборкаВспМатериал");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<СборкаВспМатериал>("PelengModel.FK__СборкаВсп__ВспМа__2D27B809", "СборкаВспМатериал", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PelengModel", Name="ВходящиеСборки")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ВходящиеСборки : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ВходящиеСборки object.
        /// </summary>
        /// <param name="номерВхСборки">Initial value of the НомерВхСборки property.</param>
        /// <param name="номерСборки">Initial value of the НомерСборки property.</param>
        /// <param name="количество">Initial value of the Количество property.</param>
        public static ВходящиеСборки CreateВходящиеСборки(global::System.String номерВхСборки, global::System.String номерСборки, global::System.Int32 количество)
        {
            ВходящиеСборки входящиеСборки = new ВходящиеСборки();
            входящиеСборки.НомерВхСборки = номерВхСборки;
            входящиеСборки.НомерСборки = номерСборки;
            входящиеСборки.Количество = количество;
            return входящиеСборки;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String НомерВхСборки
        {
            get
            {
                return _НомерВхСборки;
            }
            set
            {
                if (_НомерВхСборки != value)
                {
                    OnНомерВхСборкиChanging(value);
                    ReportPropertyChanging("НомерВхСборки");
                    _НомерВхСборки = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("НомерВхСборки");
                    OnНомерВхСборкиChanged();
                }
            }
        }
        private global::System.String _НомерВхСборки;
        partial void OnНомерВхСборкиChanging(global::System.String value);
        partial void OnНомерВхСборкиChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String НомерСборки
        {
            get
            {
                return _НомерСборки;
            }
            set
            {
                if (_НомерСборки != value)
                {
                    OnНомерСборкиChanging(value);
                    ReportPropertyChanging("НомерСборки");
                    _НомерСборки = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("НомерСборки");
                    OnНомерСборкиChanged();
                }
            }
        }
        private global::System.String _НомерСборки;
        partial void OnНомерСборкиChanging(global::System.String value);
        partial void OnНомерСборкиChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Количество
        {
            get
            {
                return _Количество;
            }
            set
            {
                OnКоличествоChanging(value);
                ReportPropertyChanging("Количество");
                _Количество = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Количество");
                OnКоличествоChanged();
            }
        }
        private global::System.Int32 _Количество;
        partial void OnКоличествоChanging(global::System.Int32 value);
        partial void OnКоличествоChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PelengModel", "FK__ВходящиеС__Номер__276EDEB3", "Сборки")]
        public Сборки Сборки
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Сборки>("PelengModel.FK__ВходящиеС__Номер__276EDEB3", "Сборки").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Сборки>("PelengModel.FK__ВходящиеС__Номер__276EDEB3", "Сборки").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Сборки> СборкиReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Сборки>("PelengModel.FK__ВходящиеС__Номер__276EDEB3", "Сборки");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Сборки>("PelengModel.FK__ВходящиеС__Номер__276EDEB3", "Сборки", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PelengModel", Name="Детали")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Детали : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Детали object.
        /// </summary>
        /// <param name="наименование">Initial value of the Наименование property.</param>
        /// <param name="номерДетали">Initial value of the НомерДетали property.</param>
        /// <param name="материалID">Initial value of the МатериалID property.</param>
        /// <param name="нормаРасхода">Initial value of the НормаРасхода property.</param>
        /// <param name="выходДеталей">Initial value of the ВыходДеталей property.</param>
        /// <param name="длинаЗаготовки">Initial value of the ДлинаЗаготовки property.</param>
        /// <param name="маршрутID">Initial value of the МаршрутID property.</param>
        public static Детали CreateДетали(global::System.String наименование, global::System.String номерДетали, global::System.Int32 материалID, global::System.Double нормаРасхода, global::System.Int32 выходДеталей, global::System.Double длинаЗаготовки, global::System.Int32 маршрутID)
        {
            Детали детали = new Детали();
            детали.Наименование = наименование;
            детали.НомерДетали = номерДетали;
            детали.МатериалID = материалID;
            детали.НормаРасхода = нормаРасхода;
            детали.ВыходДеталей = выходДеталей;
            детали.ДлинаЗаготовки = длинаЗаготовки;
            детали.МаршрутID = маршрутID;
            return детали;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Наименование
        {
            get
            {
                return _Наименование;
            }
            set
            {
                OnНаименованиеChanging(value);
                ReportPropertyChanging("Наименование");
                _Наименование = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Наименование");
                OnНаименованиеChanged();
            }
        }
        private global::System.String _Наименование;
        partial void OnНаименованиеChanging(global::System.String value);
        partial void OnНаименованиеChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String НомерДетали
        {
            get
            {
                return _НомерДетали;
            }
            set
            {
                if (_НомерДетали != value)
                {
                    OnНомерДеталиChanging(value);
                    ReportPropertyChanging("НомерДетали");
                    _НомерДетали = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("НомерДетали");
                    OnНомерДеталиChanged();
                }
            }
        }
        private global::System.String _НомерДетали;
        partial void OnНомерДеталиChanging(global::System.String value);
        partial void OnНомерДеталиChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 МатериалID
        {
            get
            {
                return _МатериалID;
            }
            set
            {
                OnМатериалIDChanging(value);
                ReportPropertyChanging("МатериалID");
                _МатериалID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("МатериалID");
                OnМатериалIDChanged();
            }
        }
        private global::System.Int32 _МатериалID;
        partial void OnМатериалIDChanging(global::System.Int32 value);
        partial void OnМатериалIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double НормаРасхода
        {
            get
            {
                return _НормаРасхода;
            }
            set
            {
                OnНормаРасходаChanging(value);
                ReportPropertyChanging("НормаРасхода");
                _НормаРасхода = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("НормаРасхода");
                OnНормаРасходаChanged();
            }
        }
        private global::System.Double _НормаРасхода;
        partial void OnНормаРасходаChanging(global::System.Double value);
        partial void OnНормаРасходаChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ВыходДеталей
        {
            get
            {
                return _ВыходДеталей;
            }
            set
            {
                OnВыходДеталейChanging(value);
                ReportPropertyChanging("ВыходДеталей");
                _ВыходДеталей = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ВыходДеталей");
                OnВыходДеталейChanged();
            }
        }
        private global::System.Int32 _ВыходДеталей;
        partial void OnВыходДеталейChanging(global::System.Int32 value);
        partial void OnВыходДеталейChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double ДлинаЗаготовки
        {
            get
            {
                return _ДлинаЗаготовки;
            }
            set
            {
                OnДлинаЗаготовкиChanging(value);
                ReportPropertyChanging("ДлинаЗаготовки");
                _ДлинаЗаготовки = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ДлинаЗаготовки");
                OnДлинаЗаготовкиChanged();
            }
        }
        private global::System.Double _ДлинаЗаготовки;
        partial void OnДлинаЗаготовкиChanging(global::System.Double value);
        partial void OnДлинаЗаготовкиChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> ШиринаЗаготовки
        {
            get
            {
                return _ШиринаЗаготовки;
            }
            set
            {
                OnШиринаЗаготовкиChanging(value);
                ReportPropertyChanging("ШиринаЗаготовки");
                _ШиринаЗаготовки = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ШиринаЗаготовки");
                OnШиринаЗаготовкиChanged();
            }
        }
        private Nullable<global::System.Double> _ШиринаЗаготовки;
        partial void OnШиринаЗаготовкиChanging(Nullable<global::System.Double> value);
        partial void OnШиринаЗаготовкиChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ПорядковыйНомер
        {
            get
            {
                return _ПорядковыйНомер;
            }
            set
            {
                OnПорядковыйНомерChanging(value);
                ReportPropertyChanging("ПорядковыйНомер");
                _ПорядковыйНомер = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ПорядковыйНомер");
                OnПорядковыйНомерChanged();
            }
        }
        private Nullable<global::System.Int32> _ПорядковыйНомер;
        partial void OnПорядковыйНомерChanging(Nullable<global::System.Int32> value);
        partial void OnПорядковыйНомерChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 МаршрутID
        {
            get
            {
                return _МаршрутID;
            }
            set
            {
                OnМаршрутIDChanging(value);
                ReportPropertyChanging("МаршрутID");
                _МаршрутID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("МаршрутID");
                OnМаршрутIDChanged();
            }
        }
        private global::System.Int32 _МаршрутID;
        partial void OnМаршрутIDChanging(global::System.Int32 value);
        partial void OnМаршрутIDChanged();

        #endregion
        
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PelengModel", "FK__Детали__286302EC", "Маршруты")]
        public Маршруты Маршруты
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Маршруты>("PelengModel.FK__Детали__286302EC", "Маршруты").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Маршруты>("PelengModel.FK__Детали__286302EC", "Маршруты").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Маршруты> МаршрутыReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Маршруты>("PelengModel.FK__Детали__286302EC", "Маршруты");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Маршруты>("PelengModel.FK__Детали__286302EC", "Маршруты", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PelengModel", "FK__Детали__Материал__29572725", "Материалы")]
        public Материалы Материалы
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Материалы>("PelengModel.FK__Детали__Материал__29572725", "Материалы").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Материалы>("PelengModel.FK__Детали__Материал__29572725", "Материалы").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Материалы> МатериалыReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Материалы>("PelengModel.FK__Детали__Материал__29572725", "Материалы");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Материалы>("PelengModel.FK__Детали__Материал__29572725", "Материалы", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PelengModel", "FK__СборкиДет__Номер__300424B4", "СборкиДетали")]
        public EntityCollection<СборкиДетали> СборкиДетали
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<СборкиДетали>("PelengModel.FK__СборкиДет__Номер__300424B4", "СборкиДетали");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<СборкиДетали>("PelengModel.FK__СборкиДет__Номер__300424B4", "СборкиДетали", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PelengModel", Name="МаркиМатериала")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class МаркиМатериала : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new МаркиМатериала object.
        /// </summary>
        /// <param name="наименованиеМарки">Initial value of the НаименованиеМарки property.</param>
        /// <param name="маркаID">Initial value of the МаркаID property.</param>
        /// <param name="плотность">Initial value of the Плотность property.</param>
        public static МаркиМатериала CreateМаркиМатериала(global::System.String наименованиеМарки, global::System.Int32 маркаID, global::System.Double плотность)
        {
            МаркиМатериала маркиМатериала = new МаркиМатериала();
            маркиМатериала.НаименованиеМарки = наименованиеМарки;
            маркиМатериала.МаркаID = маркаID;
            маркиМатериала.Плотность = плотность;
            return маркиМатериала;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String НаименованиеМарки
        {
            get
            {
                return _НаименованиеМарки;
            }
            set
            {
                OnНаименованиеМаркиChanging(value);
                ReportPropertyChanging("НаименованиеМарки");
                _НаименованиеМарки = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("НаименованиеМарки");
                OnНаименованиеМаркиChanged();
            }
        }
        private global::System.String _НаименованиеМарки;
        partial void OnНаименованиеМаркиChanging(global::System.String value);
        partial void OnНаименованиеМаркиChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 МаркаID
        {
            get
            {
                return _МаркаID;
            }
            set
            {
                if (_МаркаID != value)
                {
                    OnМаркаIDChanging(value);
                    ReportPropertyChanging("МаркаID");
                    _МаркаID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("МаркаID");
                    OnМаркаIDChanged();
                }
            }
        }
        private global::System.Int32 _МаркаID;
        partial void OnМаркаIDChanging(global::System.Int32 value);
        partial void OnМаркаIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Плотность
        {
            get
            {
                return _Плотность;
            }
            set
            {
                OnПлотностьChanging(value);
                ReportPropertyChanging("Плотность");
                _Плотность = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Плотность");
                OnПлотностьChanged();
            }
        }
        private global::System.Double _Плотность;
        partial void OnПлотностьChanging(global::System.Double value);
        partial void OnПлотностьChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PelengModel", "FK__Материалы__Марка__2C3393D0", "Материалы")]
        public EntityCollection<Материалы> Материалы
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Материалы>("PelengModel.FK__Материалы__Марка__2C3393D0", "Материалы");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Материалы>("PelengModel.FK__Материалы__Марка__2C3393D0", "Материалы", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PelengModel", Name="Маршруты")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Маршруты : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Маршруты object.
        /// </summary>
        /// <param name="порядковыйНомер">Initial value of the ПорядковыйНомер property.</param>
        /// <param name="маршрутID">Initial value of the МаршрутID property.</param>
        /// <param name="номерПодразделения">Initial value of the НомерПодразделения property.</param>
        public static Маршруты CreateМаршруты(global::System.Int32 порядковыйНомер, global::System.Int32 маршрутID, global::System.String номерПодразделения)
        {
            Маршруты маршруты = new Маршруты();
            маршруты.ПорядковыйНомер = порядковыйНомер;
            маршруты.МаршрутID = маршрутID;
            маршруты.НомерПодразделения = номерПодразделения;
            return маршруты;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ПорядковыйНомер
        {
            get
            {
                return _ПорядковыйНомер;
            }
            set
            {
                if (_ПорядковыйНомер != value)
                {
                    OnПорядковыйНомерChanging(value);
                    ReportPropertyChanging("ПорядковыйНомер");
                    _ПорядковыйНомер = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ПорядковыйНомер");
                    OnПорядковыйНомерChanged();
                }
            }
        }
        private global::System.Int32 _ПорядковыйНомер;
        partial void OnПорядковыйНомерChanging(global::System.Int32 value);
        partial void OnПорядковыйНомерChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 МаршрутID
        {
            get
            {
                return _МаршрутID;
            }
            set
            {
                if (_МаршрутID != value)
                {
                    OnМаршрутIDChanging(value);
                    ReportPropertyChanging("МаршрутID");
                    _МаршрутID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("МаршрутID");
                    OnМаршрутIDChanged();
                }
            }
        }
        private global::System.Int32 _МаршрутID;
        partial void OnМаршрутIDChanging(global::System.Int32 value);
        partial void OnМаршрутIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String НомерПодразделения
        {
            get
            {
                return _НомерПодразделения;
            }
            set
            {
                OnНомерПодразделенияChanging(value);
                ReportPropertyChanging("НомерПодразделения");
                _НомерПодразделения = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("НомерПодразделения");
                OnНомерПодразделенияChanged();
            }
        }
        private global::System.String _НомерПодразделения;
        partial void OnНомерПодразделенияChanging(global::System.String value);
        partial void OnНомерПодразделенияChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PelengModel", "FK__Детали__286302EC", "Детали")]
        public EntityCollection<Детали> Детали
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Детали>("PelengModel.FK__Детали__286302EC", "Детали");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Детали>("PelengModel.FK__Детали__286302EC", "Детали", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PelengModel", "FK__Маршруты__НомерП__2A4B4B5E", "Подразделения")]
        public Подразделения Подразделения
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Подразделения>("PelengModel.FK__Маршруты__НомерП__2A4B4B5E", "Подразделения").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Подразделения>("PelengModel.FK__Маршруты__НомерП__2A4B4B5E", "Подразделения").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Подразделения> ПодразделенияReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Подразделения>("PelengModel.FK__Маршруты__НомерП__2A4B4B5E", "Подразделения");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Подразделения>("PelengModel.FK__Маршруты__НомерП__2A4B4B5E", "Подразделения", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PelengModel", "FK__Сборки__2F10007B", "Сборки")]
        public EntityCollection<Сборки> Сборки
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Сборки>("PelengModel.FK__Сборки__2F10007B", "Сборки");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Сборки>("PelengModel.FK__Сборки__2F10007B", "Сборки", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PelengModel", Name="Материалы")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Материалы : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Материалы object.
        /// </summary>
        /// <param name="наименованиеМатериала">Initial value of the НаименованиеМатериала property.</param>
        /// <param name="материалID">Initial value of the МатериалID property.</param>
        /// <param name="габарит">Initial value of the Габарит property.</param>
        public static Материалы CreateМатериалы(global::System.String наименованиеМатериала, global::System.Int32 материалID, global::System.Double габарит)
        {
            Материалы материалы = new Материалы();
            материалы.НаименованиеМатериала = наименованиеМатериала;
            материалы.МатериалID = материалID;
            материалы.Габарит = габарит;
            return материалы;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String НаименованиеМатериала
        {
            get
            {
                return _НаименованиеМатериала;
            }
            set
            {
                OnНаименованиеМатериалаChanging(value);
                ReportPropertyChanging("НаименованиеМатериала");
                _НаименованиеМатериала = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("НаименованиеМатериала");
                OnНаименованиеМатериалаChanged();
            }
        }
        private global::System.String _НаименованиеМатериала;
        partial void OnНаименованиеМатериалаChanging(global::System.String value);
        partial void OnНаименованиеМатериалаChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 МатериалID
        {
            get
            {
                return _МатериалID;
            }
            set
            {
                if (_МатериалID != value)
                {
                    OnМатериалIDChanging(value);
                    ReportPropertyChanging("МатериалID");
                    _МатериалID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("МатериалID");
                    OnМатериалIDChanged();
                }
            }
        }
        private global::System.Int32 _МатериалID;
        partial void OnМатериалIDChanging(global::System.Int32 value);
        partial void OnМатериалIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Габарит
        {
            get
            {
                return _Габарит;
            }
            set
            {
                OnГабаритChanging(value);
                ReportPropertyChanging("Габарит");
                _Габарит = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Габарит");
                OnГабаритChanged();
            }
        }
        private global::System.Double _Габарит;
        partial void OnГабаритChanging(global::System.Double value);
        partial void OnГабаритChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Ширина
        {
            get
            {
                return _Ширина;
            }
            set
            {
                OnШиринаChanging(value);
                ReportPropertyChanging("Ширина");
                _Ширина = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Ширина");
                OnШиринаChanged();
            }
        }
        private Nullable<global::System.Int32> _Ширина;
        partial void OnШиринаChanging(Nullable<global::System.Int32> value);
        partial void OnШиринаChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Длина
        {
            get
            {
                return _Длина;
            }
            set
            {
                OnДлинаChanging(value);
                ReportPropertyChanging("Длина");
                _Длина = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Длина");
                OnДлинаChanged();
            }
        }
        private Nullable<global::System.Int32> _Длина;
        partial void OnДлинаChanging(Nullable<global::System.Int32> value);
        partial void OnДлинаChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> МаркаID
        {
            get
            {
                return _МаркаID;
            }
            set
            {
                OnМаркаIDChanging(value);
                ReportPropertyChanging("МаркаID");
                _МаркаID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("МаркаID");
                OnМаркаIDChanged();
            }
        }
        private Nullable<global::System.Int32> _МаркаID;
        partial void OnМаркаIDChanging(Nullable<global::System.Int32> value);
        partial void OnМаркаIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ПрофильID
        {
            get
            {
                return _ПрофильID;
            }
            set
            {
                OnПрофильIDChanging(value);
                ReportPropertyChanging("ПрофильID");
                _ПрофильID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ПрофильID");
                OnПрофильIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ПрофильID;
        partial void OnПрофильIDChanging(Nullable<global::System.Int32> value);
        partial void OnПрофильIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PelengModel", "FK__Детали__Материал__29572725", "Детали")]
        public EntityCollection<Детали> Детали
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Детали>("PelengModel.FK__Детали__Материал__29572725", "Детали");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Детали>("PelengModel.FK__Детали__Материал__29572725", "Детали", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PelengModel", "FK__Материалы__Марка__2C3393D0", "МаркиМатериала")]
        public МаркиМатериала МаркиМатериала
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<МаркиМатериала>("PelengModel.FK__Материалы__Марка__2C3393D0", "МаркиМатериала").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<МаркиМатериала>("PelengModel.FK__Материалы__Марка__2C3393D0", "МаркиМатериала").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<МаркиМатериала> МаркиМатериалаReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<МаркиМатериала>("PelengModel.FK__Материалы__Марка__2C3393D0", "МаркиМатериала");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<МаркиМатериала>("PelengModel.FK__Материалы__Марка__2C3393D0", "МаркиМатериала", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PelengModel", "FK__Материалы__Профи__2B3F6F97", "Профили")]
        public Профили Профили
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Профили>("PelengModel.FK__Материалы__Профи__2B3F6F97", "Профили").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Профили>("PelengModel.FK__Материалы__Профи__2B3F6F97", "Профили").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Профили> ПрофилиReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Профили>("PelengModel.FK__Материалы__Профи__2B3F6F97", "Профили");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Профили>("PelengModel.FK__Материалы__Профи__2B3F6F97", "Профили", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PelengModel", Name="Подразделения")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Подразделения : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Подразделения object.
        /// </summary>
        /// <param name="названиеУчастка">Initial value of the НазваниеУчастка property.</param>
        /// <param name="номерПодразделения">Initial value of the НомерПодразделения property.</param>
        public static Подразделения CreateПодразделения(global::System.String названиеУчастка, global::System.String номерПодразделения)
        {
            Подразделения подразделения = new Подразделения();
            подразделения.НазваниеУчастка = названиеУчастка;
            подразделения.НомерПодразделения = номерПодразделения;
            return подразделения;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String НазваниеУчастка
        {
            get
            {
                return _НазваниеУчастка;
            }
            set
            {
                OnНазваниеУчасткаChanging(value);
                ReportPropertyChanging("НазваниеУчастка");
                _НазваниеУчастка = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("НазваниеУчастка");
                OnНазваниеУчасткаChanged();
            }
        }
        private global::System.String _НазваниеУчастка;
        partial void OnНазваниеУчасткаChanging(global::System.String value);
        partial void OnНазваниеУчасткаChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String НомерПодразделения
        {
            get
            {
                return _НомерПодразделения;
            }
            set
            {
                if (_НомерПодразделения != value)
                {
                    OnНомерПодразделенияChanging(value);
                    ReportPropertyChanging("НомерПодразделения");
                    _НомерПодразделения = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("НомерПодразделения");
                    OnНомерПодразделенияChanged();
                }
            }
        }
        private global::System.String _НомерПодразделения;
        partial void OnНомерПодразделенияChanging(global::System.String value);
        partial void OnНомерПодразделенияChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PelengModel", "FK__Маршруты__НомерП__2A4B4B5E", "Маршруты")]
        public EntityCollection<Маршруты> Маршруты
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Маршруты>("PelengModel.FK__Маршруты__НомерП__2A4B4B5E", "Маршруты");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Маршруты>("PelengModel.FK__Маршруты__НомерП__2A4B4B5E", "Маршруты", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PelengModel", Name="Профили")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Профили : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Профили object.
        /// </summary>
        /// <param name="видПрофиля">Initial value of the ВидПрофиля property.</param>
        /// <param name="профильID">Initial value of the ПрофильID property.</param>
        public static Профили CreateПрофили(global::System.String видПрофиля, global::System.Int32 профильID)
        {
            Профили профили = new Профили();
            профили.ВидПрофиля = видПрофиля;
            профили.ПрофильID = профильID;
            return профили;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ВидПрофиля
        {
            get
            {
                return _ВидПрофиля;
            }
            set
            {
                OnВидПрофиляChanging(value);
                ReportPropertyChanging("ВидПрофиля");
                _ВидПрофиля = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ВидПрофиля");
                OnВидПрофиляChanged();
            }
        }
        private global::System.String _ВидПрофиля;
        partial void OnВидПрофиляChanging(global::System.String value);
        partial void OnВидПрофиляChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ПрофильID
        {
            get
            {
                return _ПрофильID;
            }
            set
            {
                if (_ПрофильID != value)
                {
                    OnПрофильIDChanging(value);
                    ReportPropertyChanging("ПрофильID");
                    _ПрофильID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ПрофильID");
                    OnПрофильIDChanged();
                }
            }
        }
        private global::System.Int32 _ПрофильID;
        partial void OnПрофильIDChanging(global::System.Int32 value);
        partial void OnПрофильIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PelengModel", "FK__Материалы__Профи__2B3F6F97", "Материалы")]
        public EntityCollection<Материалы> Материалы
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Материалы>("PelengModel.FK__Материалы__Профи__2B3F6F97", "Материалы");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Материалы>("PelengModel.FK__Материалы__Профи__2B3F6F97", "Материалы", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PelengModel", Name="СборкаВспМатериал")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class СборкаВспМатериал : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new СборкаВспМатериал object.
        /// </summary>
        /// <param name="номерСборки">Initial value of the НомерСборки property.</param>
        /// <param name="нормаРасхода">Initial value of the НормаРасхода property.</param>
        /// <param name="вспМатериалID">Initial value of the ВспМатериалID property.</param>
        public static СборкаВспМатериал CreateСборкаВспМатериал(global::System.String номерСборки, global::System.Double нормаРасхода, global::System.Int32 вспМатериалID)
        {
            СборкаВспМатериал сборкаВспМатериал = new СборкаВспМатериал();
            сборкаВспМатериал.НомерСборки = номерСборки;
            сборкаВспМатериал.НормаРасхода = нормаРасхода;
            сборкаВспМатериал.ВспМатериалID = вспМатериалID;
            return сборкаВспМатериал;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String НомерСборки
        {
            get
            {
                return _НомерСборки;
            }
            set
            {
                if (_НомерСборки != value)
                {
                    OnНомерСборкиChanging(value);
                    ReportPropertyChanging("НомерСборки");
                    _НомерСборки = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("НомерСборки");
                    OnНомерСборкиChanged();
                }
            }
        }
        private global::System.String _НомерСборки;
        partial void OnНомерСборкиChanging(global::System.String value);
        partial void OnНомерСборкиChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double НормаРасхода
        {
            get
            {
                return _НормаРасхода;
            }
            set
            {
                OnНормаРасходаChanging(value);
                ReportPropertyChanging("НормаРасхода");
                _НормаРасхода = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("НормаРасхода");
                OnНормаРасходаChanged();
            }
        }
        private global::System.Double _НормаРасхода;
        partial void OnНормаРасходаChanging(global::System.Double value);
        partial void OnНормаРасходаChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ВспМатериалID
        {
            get
            {
                return _ВспМатериалID;
            }
            set
            {
                if (_ВспМатериалID != value)
                {
                    OnВспМатериалIDChanging(value);
                    ReportPropertyChanging("ВспМатериалID");
                    _ВспМатериалID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ВспМатериалID");
                    OnВспМатериалIDChanged();
                }
            }
        }
        private global::System.Int32 _ВспМатериалID;
        partial void OnВспМатериалIDChanging(global::System.Int32 value);
        partial void OnВспМатериалIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PelengModel", "FK__СборкаВсп__ВспМа__2D27B809", "ВспомогательныеМатериалы")]
        public ВспомогательныеМатериалы ВспомогательныеМатериалы
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ВспомогательныеМатериалы>("PelengModel.FK__СборкаВсп__ВспМа__2D27B809", "ВспомогательныеМатериалы").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ВспомогательныеМатериалы>("PelengModel.FK__СборкаВсп__ВспМа__2D27B809", "ВспомогательныеМатериалы").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ВспомогательныеМатериалы> ВспомогательныеМатериалыReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ВспомогательныеМатериалы>("PelengModel.FK__СборкаВсп__ВспМа__2D27B809", "ВспомогательныеМатериалы");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ВспомогательныеМатериалы>("PelengModel.FK__СборкаВсп__ВспМа__2D27B809", "ВспомогательныеМатериалы", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PelengModel", "FK__СборкаВсп__Номер__2E1BDC42", "Сборки")]
        public Сборки Сборки
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Сборки>("PelengModel.FK__СборкаВсп__Номер__2E1BDC42", "Сборки").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Сборки>("PelengModel.FK__СборкаВсп__Номер__2E1BDC42", "Сборки").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Сборки> СборкиReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Сборки>("PelengModel.FK__СборкаВсп__Номер__2E1BDC42", "Сборки");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Сборки>("PelengModel.FK__СборкаВсп__Номер__2E1BDC42", "Сборки", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PelengModel", Name="Сборки")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Сборки : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Сборки object.
        /// </summary>
        /// <param name="наименование">Initial value of the Наименование property.</param>
        /// <param name="номерСборки">Initial value of the НомерСборки property.</param>
        /// <param name="маршрутID">Initial value of the МаршрутID property.</param>
        public static Сборки CreateСборки(global::System.String наименование, global::System.String номерСборки, global::System.Int32 маршрутID)
        {
            Сборки сборки = new Сборки();
            сборки.Наименование = наименование;
            сборки.НомерСборки = номерСборки;
            сборки.МаршрутID = маршрутID;
            return сборки;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Наименование
        {
            get
            {
                return _Наименование;
            }
            set
            {
                OnНаименованиеChanging(value);
                ReportPropertyChanging("Наименование");
                _Наименование = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Наименование");
                OnНаименованиеChanged();
            }
        }
        private global::System.String _Наименование;
        partial void OnНаименованиеChanging(global::System.String value);
        partial void OnНаименованиеChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String НомерСборки
        {
            get
            {
                return _НомерСборки;
            }
            set
            {
                if (_НомерСборки != value)
                {
                    OnНомерСборкиChanging(value);
                    ReportPropertyChanging("НомерСборки");
                    _НомерСборки = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("НомерСборки");
                    OnНомерСборкиChanged();
                }
            }
        }
        private global::System.String _НомерСборки;
        partial void OnНомерСборкиChanging(global::System.String value);
        partial void OnНомерСборкиChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ПорядковыйНомер
        {
            get
            {
                return _ПорядковыйНомер;
            }
            set
            {
                OnПорядковыйНомерChanging(value);
                ReportPropertyChanging("ПорядковыйНомер");
                _ПорядковыйНомер = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ПорядковыйНомер");
                OnПорядковыйНомерChanged();
            }
        }
        private Nullable<global::System.Int32> _ПорядковыйНомер;
        partial void OnПорядковыйНомерChanging(Nullable<global::System.Int32> value);
        partial void OnПорядковыйНомерChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 МаршрутID
        {
            get
            {
                return _МаршрутID;
            }
            set
            {
                OnМаршрутIDChanging(value);
                ReportPropertyChanging("МаршрутID");
                _МаршрутID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("МаршрутID");
                OnМаршрутIDChanged();
            }
        }
        private global::System.Int32 _МаршрутID;
        partial void OnМаршрутIDChanging(global::System.Int32 value);
        partial void OnМаршрутIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PelengModel", "FK__ВходящиеС__Номер__276EDEB3", "ВходящиеСборки")]
        public EntityCollection<ВходящиеСборки> ВходящиеСборки
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ВходящиеСборки>("PelengModel.FK__ВходящиеС__Номер__276EDEB3", "ВходящиеСборки");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ВходящиеСборки>("PelengModel.FK__ВходящиеС__Номер__276EDEB3", "ВходящиеСборки", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PelengModel", "FK__Сборки__2F10007B", "Маршруты")]
        public Маршруты Маршруты
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Маршруты>("PelengModel.FK__Сборки__2F10007B", "Маршруты").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Маршруты>("PelengModel.FK__Сборки__2F10007B", "Маршруты").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Маршруты> МаршрутыReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Маршруты>("PelengModel.FK__Сборки__2F10007B", "Маршруты");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Маршруты>("PelengModel.FK__Сборки__2F10007B", "Маршруты", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PelengModel", "FK__СборкаВсп__Номер__2E1BDC42", "СборкаВспМатериал")]
        public EntityCollection<СборкаВспМатериал> СборкаВспМатериал
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<СборкаВспМатериал>("PelengModel.FK__СборкаВсп__Номер__2E1BDC42", "СборкаВспМатериал");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<СборкаВспМатериал>("PelengModel.FK__СборкаВсп__Номер__2E1BDC42", "СборкаВспМатериал", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PelengModel", "FK__СборкиДет__Номер__30F848ED", "СборкиДетали")]
        public EntityCollection<СборкиДетали> СборкиДетали
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<СборкиДетали>("PelengModel.FK__СборкиДет__Номер__30F848ED", "СборкиДетали");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<СборкиДетали>("PelengModel.FK__СборкиДет__Номер__30F848ED", "СборкиДетали", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PelengModel", Name="СборкиДетали")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class СборкиДетали : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new СборкиДетали object.
        /// </summary>
        /// <param name="номерДетали">Initial value of the НомерДетали property.</param>
        /// <param name="количество">Initial value of the Количество property.</param>
        /// <param name="номерСборки">Initial value of the НомерСборки property.</param>
        public static СборкиДетали CreateСборкиДетали(global::System.String номерДетали, global::System.Int32 количество, global::System.String номерСборки)
        {
            СборкиДетали сборкиДетали = new СборкиДетали();
            сборкиДетали.НомерДетали = номерДетали;
            сборкиДетали.Количество = количество;
            сборкиДетали.НомерСборки = номерСборки;
            return сборкиДетали;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String НомерДетали
        {
            get
            {
                return _НомерДетали;
            }
            set
            {
                if (_НомерДетали != value)
                {
                    OnНомерДеталиChanging(value);
                    ReportPropertyChanging("НомерДетали");
                    _НомерДетали = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("НомерДетали");
                    OnНомерДеталиChanged();
                }
            }
        }
        private global::System.String _НомерДетали;
        partial void OnНомерДеталиChanging(global::System.String value);
        partial void OnНомерДеталиChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Количество
        {
            get
            {
                return _Количество;
            }
            set
            {
                OnКоличествоChanging(value);
                ReportPropertyChanging("Количество");
                _Количество = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Количество");
                OnКоличествоChanged();
            }
        }
        private global::System.Int32 _Количество;
        partial void OnКоличествоChanging(global::System.Int32 value);
        partial void OnКоличествоChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String НомерСборки
        {
            get
            {
                return _НомерСборки;
            }
            set
            {
                if (_НомерСборки != value)
                {
                    OnНомерСборкиChanging(value);
                    ReportPropertyChanging("НомерСборки");
                    _НомерСборки = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("НомерСборки");
                    OnНомерСборкиChanged();
                }
            }
        }
        private global::System.String _НомерСборки;
        partial void OnНомерСборкиChanging(global::System.String value);
        partial void OnНомерСборкиChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PelengModel", "FK__СборкиДет__Номер__300424B4", "Детали")]
        public Детали Детали
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Детали>("PelengModel.FK__СборкиДет__Номер__300424B4", "Детали").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Детали>("PelengModel.FK__СборкиДет__Номер__300424B4", "Детали").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Детали> ДеталиReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Детали>("PelengModel.FK__СборкиДет__Номер__300424B4", "Детали");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Детали>("PelengModel.FK__СборкиДет__Номер__300424B4", "Детали", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PelengModel", "FK__СборкиДет__Номер__30F848ED", "Сборки")]
        public Сборки Сборки
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Сборки>("PelengModel.FK__СборкиДет__Номер__30F848ED", "Сборки").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Сборки>("PelengModel.FK__СборкиДет__Номер__30F848ED", "Сборки").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Сборки> СборкиReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Сборки>("PelengModel.FK__СборкиДет__Номер__30F848ED", "Сборки");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Сборки>("PelengModel.FK__СборкиДет__Номер__30F848ED", "Сборки", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
